{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/polyfill/pep.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/constants/index.js","webpack:///./src/js/handleGestures.js","webpack:///./src/js/main.js","webpack:///./src/js/generateContentFromTemplate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","e","document","createEvent","initEvent","bubbles","cancelable","length","buttons","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","PointerMap","window","Map","forEach","SparseArrayMap","this","array","size","set","k","v","undefined","delete","has","clear","callback","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","source","newEvents","events","push","register","element","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","type","fn","listen","target","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","parentNode","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","querySelector","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","map","toArray","slice","filter","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","remove","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","el","elementChanged","oldValue","concatLists","accum","list","concat","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","attrib2css","selectors","styles","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","Math","abs","dy","prepareEvent","pd","prepareButtonsForMove","which","mousedown","button","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","exec","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","setTimeout","clearTimeout","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","id","detail","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","webkitForce","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","indexOf","splice","h","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","Error","assertConnected","elem","parent","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","String","createElement","textContent","appendChild","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding","factory","setMaxHeightForTruncate","item","maxHeight","parseFloat","getComputedStyle","lineHeight","scrollHeight","classList","style","setZoom","zoom","maxScrollDistance","backgroundSize","innerText","round","scrollBar","display","backgroundPositionX","INITIAL_ZOOM","MAX_ZOOM","MIN_ZOOM","ZOOM_SPEED","INITIAL_BRIGHTNESS","MIN_BRIGHTNESS","MAX_BRIGHTNESS","INITIAL_SCROLL","handleGestures","touchableArea","currentGestures","prevPos","prevDiff","prevAngle","nodeState","scroll","brightness","pointerUpHandler","remove_event","pointerMoveHandler","p1","p2","curDiff","pow1","pow2","sqrt","getDistance","curAngle","atan2","PI","getAngle","clientWidth","setBrightness","handleTwoTouches","left","setScroll","handleOneTouch","onclick","onload","async","console","data","fetch","then","response","json","catch","err","eventsNode","eventsTemplate","eventNode","content","eventClone","importNode","eventIcon","setAttribute","icon","title","time","description","eventDetails","descriptionNode","descriptionClone","graphNode","graphClone","temperature","tempNode","tempClone","humidity","track","trackNode","trackClone","albumcover","artist","volume","btnGroupNode","btnGroupClone","image","imageNode","imageClone","generateContent","body","onresize","toggle"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/*!\n * PEP v0.4.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 0;\n    e.height = inDict.height || 0;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture');\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture');\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(v) {\n    return 'body /shadow-deep/ ' + selector(v);\n  }\n  function selector(v) {\n    return '[touch-action=\"' + v + '\"]';\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    'none',\n    'auto',\n    'pan-x',\n    'pan-y',\n    {\n      rule: 'pan-x pan-y',\n      selectors: [\n        'pan-x pan-y',\n        'pan-y pan-x'\n      ]\n    }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        if (String(r) === r) {\n          styles += selector(r) + rule(r) + '\\n';\n          if (hasShadowRoot) {\n            styles += shadowSelector(r) + rule(r) + '\\n';\n          }\n        } else {\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\n          if (hasShadowRoot) {\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\n          }\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // This should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var CLICK_COUNT_TIMEOUT = 200;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (st) {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n      el._scrollType = undefined;\n      dispatcher.unlisten(el, this.events);\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (st && oldSt) {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (oldSt) {\n        this.elementRemoved(el);\n      } else if (st) {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      EMITTER: 'none',\n      XSCROLLER: 'pan-x',\n      YSCROLLER: 'pan-y',\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\n    },\n    touchActionToScrollType: function(touchAction) {\n      var t = touchAction;\n      var st = this.scrollTypes;\n      if (t === 'none') {\n        return 'none';\n      } else if (t === st.XSCROLLER) {\n        return 'X';\n      } else if (t === st.YSCROLLER) {\n        return 'Y';\n      } else if (st.SCROLLER.exec(t)) {\n        return 'XY';\n      }\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n        this.cancelResetClickCount();\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n        this.resetClickCount();\n      }\n    },\n    clickCount: 0,\n    resetId: null,\n    resetClickCount: function() {\n      var fn = function() {\n        this.clickCount = 0;\n        this.resetId = null;\n      }.bind(this);\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\n    },\n    cancelResetClickCount: function() {\n      if (this.resetId) {\n        clearTimeout(this.resetId);\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.detail = this.clickCount;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      e.pointerType = this.POINTER_TYPE;\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var scrollAxis = inEvent.currentTarget._scrollType;\n        if (scrollAxis === 'none') {\n\n          // this element is a touch-action: none, should never scroll\n          ret = false;\n        } else if (scrollAxis === 'XY') {\n\n          // this element should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          // check the intended scroll axis, and other axis\n          var a = scrollAxis;\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\n\n          // if delta in the scroll axis > delta other axis, scroll instead of\n          // making events\n          ret = da >= doa;\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.clickCount++;\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          inEvent.preventDefault();\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('InvalidPointerId');\n      error.name = 'InvalidPointerId';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));","export function setMaxHeightForTruncate() {\r\n  setTimeout(() => {\r\n    const truncatedStrings = document.querySelectorAll('.event__title');\r\n    truncatedStrings.forEach(item => {\r\n      const maxHeight = parseFloat(getComputedStyle(item).lineHeight) * 2;\r\n      if (item.scrollHeight - maxHeight > 5) item.classList.add('event__title_truncated');\r\n      item.style.maxHeight = `${maxHeight}px`;\r\n    });\r\n  }, 100);\r\n}\r\n\r\nexport function isTouchDevice() {\r\n  return 'ontouchstart' in window;\r\n}\r\n\r\nexport function isTemplateSupported() {\r\n  return 'content' in document.createElement('template');\r\n}\r\n\r\nexport function getDistance(p1, p2) {\r\n  let pow1 = Math.abs(p2.x - p1.x) ^ 2;\r\n  let pow2 = Math.abs(p2.y - p1.y) ^ 2;\r\n  return Math.sqrt(pow1 + pow2);\r\n}\r\n\r\nexport function getAngle(p1, p2) {\r\n  const rad = Math.atan2(p2.x - p1.x, p2.y - p1.y);\r\n  const grad = rad * 180 / Math.PI;\r\n  return grad;\r\n}\r\n\r\nexport function setZoom(el, zoom, maxScrollDistance) {\r\n  el.style.backgroundSize = `${zoom}%`;\r\n  document.querySelector('.event__pic-zoom').innerText = `Приближение: ${Math.round(zoom)}%`;\r\n\r\n  const scrollBar = document.querySelector('.event__pic-scrollbar');\r\n  if (zoom === 100) {\r\n    scrollBar.style.display = 'none';\r\n  } else if (scrollBar.style.display === 'none') {\r\n    scrollBar.style.display = 'block';\r\n  }\r\n  /* При уменьшении размера, если картинка смещена вправо — свдигаем,\r\n  чтобы картинка не выходила за пределы поля видимости. */\r\n  if (-parseFloat(el.style.backgroundPositionX) > maxScrollDistance) {\r\n    el.style.backgroundPositionX = `${-maxScrollDistance}px`;\r\n  }\r\n}\r\n\r\nexport function setBrightness(el, brightness) {\r\n  el.style.filter = `brightness(${brightness}%)`;\r\n  document.querySelector('.event__pic-brightness').innerText = `Яркость: ${Math.round(brightness)}%`;\r\n}\r\n\r\nexport function setScroll(el, scroll, maxScrollDistance) {\r\n  el.style.backgroundPositionX = `${scroll}px`;\r\n  document.querySelector('.event__pic-scrollbar').style.left = `${(-scroll * 100) / maxScrollDistance}%`;\r\n}\r\n","export const INITIAL_ZOOM = 200;\r\nexport const MAX_ZOOM = 1000;\r\nexport const MIN_ZOOM = 100;\r\nexport const ZOOM_SPEED = 30;\r\nexport const INITIAL_BRIGHTNESS = 100;\r\nexport const MIN_BRIGHTNESS = 0;\r\nexport const MAX_BRIGHTNESS = 500;\r\nexport const INITIAL_SCROLL = 0;\r\n","import {\r\n  MAX_ZOOM,\r\n  MIN_ZOOM,\r\n  ZOOM_SPEED,\r\n  MIN_BRIGHTNESS,\r\n  MAX_BRIGHTNESS,\r\n  INITIAL_ZOOM,\r\n  INITIAL_BRIGHTNESS,\r\n  INITIAL_SCROLL\r\n} from './constants';\r\nimport {\r\n  getDistance,\r\n  getAngle,\r\n  setZoom,\r\n  setBrightness,\r\n  setScroll\r\n} from './utils';\r\n\r\nexport default function handleGestures() {\r\n  const touchableArea = document.querySelector('.event__pic-img');\r\n\r\n  const currentGestures = {\r\n    events: [],\r\n    prevPos: null,\r\n    prevDiff: null,\r\n    prevAngle: null,\r\n  };\r\n  \r\n  /* Начальные значения сдвига, зума и яркости */\r\n  const nodeState = {\r\n    zoom: INITIAL_ZOOM,\r\n    scroll: INITIAL_SCROLL,\r\n    brightness: INITIAL_BRIGHTNESS\r\n  };\r\n\r\n  document.querySelector('.event__pic-reset-zoom-btn').onclick = (e) => {\r\n    nodeState.zoom = 100;\r\n    setZoom(touchableArea, nodeState.zoom);\r\n  };\r\n\r\n  touchableArea.addEventListener('pointerdown', e => {\r\n    touchableArea.setPointerCapture(e.pointerId);\r\n\r\n    currentGestures.events.push(e);\r\n    touchableArea.addEventListener('pointermove', pointerMoveHandler);\r\n  });\r\n\r\n  touchableArea.addEventListener('pointerup', pointerUpHandler);\r\n  touchableArea.addEventListener('pointercancel', pointerUpHandler);\r\n  touchableArea.addEventListener('pointerout', pointerUpHandler);\r\n  touchableArea.addEventListener('pointerleave', pointerUpHandler);\r\n\r\n  function pointerUpHandler(e) {\r\n    remove_event(e);\r\n    if (currentGestures.events.length < 2) currentGestures.prevDiff = null;\r\n    if (currentGestures.events.length < 1) currentGestures.prevPos = null;\r\n    if (currentGestures.events.length < 2) currentGestures.prevAngle = null;\r\n  }\r\n\r\n  function pointerMoveHandler(e) {\r\n    for (let i = 0; i < currentGestures.events.length; i++) {\r\n      if (e.pointerId == currentGestures.events[i].pointerId) {\r\n        currentGestures.events[i] = e;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!currentGestures.events.length) {\r\n      return;\r\n    } else if (currentGestures.events.length === 2) {\r\n      handleTwoTouches(e);\r\n    } else if (currentGestures.events.length === 1) {\r\n      handleOneTouch(e);\r\n    }\r\n  }\r\n\r\n  function handleOneTouch(e) {\r\n    if (currentGestures.prevPos) {\r\n      const maxScrollDistance = touchableArea.clientWidth * nodeState.zoom / 100 - e.target.clientWidth;\r\n\r\n      nodeState.scroll += e.x - currentGestures.prevPos;\r\n\r\n      if (nodeState.scroll > 0) {\r\n        nodeState.scroll = 0;\r\n      } else if (-nodeState.scroll > maxScrollDistance) {\r\n        nodeState.scroll = -maxScrollDistance;\r\n      }\r\n\r\n      setScroll(e.target, nodeState.scroll, maxScrollDistance);\r\n    }\r\n\r\n    currentGestures.prevPos = e.x;\r\n  }\r\n\r\n  function handleTwoTouches(e) {\r\n    const p1 = {x: currentGestures.events[0].clientX, y: currentGestures.events[0].clientY};\r\n    const p2 = {x: currentGestures.events[1].clientX, y: currentGestures.events[1].clientY};;\r\n    const curDiff = getDistance(p1, p2);\r\n    const curAngle = getAngle(p1, p2);\r\n\r\n    if (currentGestures.prevDiff) {\r\n      nodeState.zoom += (curDiff - currentGestures.prevDiff) * ZOOM_SPEED;\r\n\r\n      if (nodeState.zoom > MAX_ZOOM) {\r\n        nodeState.zoom = MAX_ZOOM;\r\n      } else if (nodeState.zoom < MIN_ZOOM) {\r\n        nodeState.zoom = MIN_ZOOM;\r\n      }\r\n\r\n      const maxScrollDistance = touchableArea.clientWidth * nodeState.zoom / 100 - e.target.clientWidth;\r\n      setZoom(e.target, nodeState.zoom, maxScrollDistance);\r\n    }\r\n\r\n    if (currentGestures.prevAngle) {\r\n      nodeState.brightness -= curAngle - currentGestures.prevAngle;\r\n\r\n      if (nodeState.brightness > MAX_BRIGHTNESS) {\r\n        nodeState.brightness = MAX_BRIGHTNESS;\r\n      } else if (nodeState.brightness < MIN_BRIGHTNESS) {\r\n        nodeState.brightness = MIN_BRIGHTNESS;\r\n      }\r\n\r\n      setBrightness(e.target, nodeState.brightness);\r\n    }\r\n\r\n    currentGestures.prevDiff = curDiff;\r\n    currentGestures.prevAngle = curAngle;\r\n  }\r\n\r\n  function remove_event(e) {\r\n    for (let i = 0; i < currentGestures.events.length; i++) {\r\n      if (currentGestures.events[i].pointerId == e.pointerId) {\r\n        currentGestures.events.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import './polyfill/pep';\r\nimport generateContent from './generateContentFromTemplate';\r\nimport { setMaxHeightForTruncate, isTouchDevice, isTemplateSupported } from './utils';\r\nimport handleGestures from './handleGestures';\r\n\r\nwindow.onload = async function () {\r\n  /* Генерируются карточки из json данных на основании шаблона */\r\n  if (isTemplateSupported) {\r\n    await generateContent();\r\n    // Установим максимально-возможную высоту для заголовков карточек\r\n    setMaxHeightForTruncate();\r\n  } else {\r\n    console.error('тег <template> не поддерживается браузером. Обновитесь на Yandex Browser');\r\n  }\r\n\r\n  /* Если это тач устройства, то добавляем в body класс .touch */\r\n  if (isTouchDevice()) {\r\n    document.body.classList.add('touch');\r\n  }\r\n\r\n  /* При изменении размера окна пересчитываем максимально-возможную высоту заголовков карточек */\r\n  window.onresize = function() {\r\n    setMaxHeightForTruncate();\r\n  }\r\n\r\n  /* Показывать / скрывать меню на узких экранах по клику на \"бургерное меню\" */\r\n  document.querySelector('#toggle-menu').addEventListener('click', () => {\r\n    document.querySelector('#nav-menu').classList.toggle('menu_visible');\r\n  });\r\n\r\n  /* Обработчики жестов */\r\n  handleGestures();\r\n}\r\n","export default async function generateContent() {\r\n  const DATA_URL = 'data/events.json';\r\n\r\n  const data = await fetch(DATA_URL)\r\n    .then(response => response.json())\r\n    .then(json => json)\r\n    .catch(err => console.error(err));\r\n\r\n  if (!data) return null;\r\n\r\n  const eventsNode = document.querySelector('#events');\r\n  const eventsTemplate = document.querySelector('#events-template');\r\n  const eventNode = eventsTemplate.content.querySelector('.event');\r\n\r\n  data.events.forEach(event => {\r\n    const eventClone = document.importNode(eventNode, true);\r\n    eventClone.classList.add(`event_size_${event.size}`);\r\n    if (event.type === 'critical') eventClone.classList.add('event_critical');\r\n\r\n    const eventIcon = eventClone.querySelector('.event__icon');\r\n    eventIcon.setAttribute('src', `img/${event.icon}${event.type === 'critical' ? '-white' : ''}.svg`);\r\n    eventIcon.setAttribute('alt', event.source);\r\n\r\n    eventClone.querySelector('.event__title').textContent = event.title;\r\n    eventClone.querySelector('.event__source').textContent = event.source;\r\n    eventClone.querySelector('.event__time').textContent = event.time;\r\n\r\n    if (event.description || event.data) {\r\n      var eventDetails = document.createElement('div');\r\n      eventDetails.classList.add('event__details');\r\n      eventClone.appendChild(eventDetails);\r\n    }\r\n\r\n    if (event.description) {\r\n      const descriptionNode = eventsTemplate.content.querySelector('.event__description');\r\n      const descriptionClone = document.importNode(descriptionNode, true);\r\n      descriptionClone.textContent = event.description;\r\n      eventDetails.appendChild(descriptionClone);\r\n    }\r\n\r\n    if (event.data && event.data.type === 'graph') {\r\n      const graphNode = eventsTemplate.content.querySelector('.event__graph');\r\n      const graphClone = document.importNode(graphNode, true);\r\n      eventDetails.appendChild(graphClone);\r\n    }\r\n\r\n    if (event.data && event.data.temperature) {\r\n      const tempNode = eventsTemplate.content.querySelector('.event__temp-and-hum');\r\n      const tempClone = document.importNode(tempNode, true);\r\n      tempClone.querySelector('#temp').textContent = event.data.temperature;\r\n      tempClone.querySelector('#hum').textContent = event.data.humidity;\r\n      eventDetails.appendChild(tempClone);\r\n    }\r\n\r\n    if (event.data && event.data.track) {\r\n      const trackNode = eventsTemplate.content.querySelector('.event__track');\r\n      const trackClone = document.importNode(trackNode, true);\r\n      trackClone.querySelector('.event__track__cover').setAttribute('src', event.data.albumcover);\r\n      trackClone.querySelector('.event__track__name').textContent = `${event.data.artist} - ${event.data.track.name}`;\r\n      trackClone.querySelector('.event__track__time').textContent = event.data.track.length;\r\n      trackClone.querySelector('.event__track__vol').textContent = event.data.volume;\r\n      eventDetails.appendChild(trackClone);\r\n    }\r\n\r\n    if (event.data && event.data.buttons) {\r\n      const btnGroupNode = eventsTemplate.content.querySelector('.event__btn-group');\r\n      const btnGroupClone = document.importNode(btnGroupNode, true);\r\n      btnGroupClone.querySelector('.event__btn-confirm').textContent = event.data.buttons[0];\r\n      btnGroupClone.querySelector('.event__btn-cancel').textContent = event.data.buttons[1];\r\n      eventDetails.appendChild(btnGroupClone);\r\n    }\r\n\r\n    if (event.data && event.data.image) {\r\n      const imageNode = eventsTemplate.content.querySelector('.event__pic');\r\n      const imageClone = document.importNode(imageNode, true);\r\n      eventDetails.appendChild(imageClone);\r\n    }\r\n\r\n    eventsNode.appendChild(eventClone);\r\n  });\r\n}\r\n"],"sourceRoot":""}