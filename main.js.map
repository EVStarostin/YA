{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/polyfill/pep.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/constants/index.js","webpack:///./src/js/handleGestures.js","webpack:///./src/js/main.js","webpack:///./src/js/generateContentFromTemplate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","e","document","createEvent","initEvent","bubbles","cancelable","length","buttons","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","PointerMap","window","Map","forEach","SparseArrayMap","this","array","size","set","k","v","undefined","delete","has","clear","callback","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","source","newEvents","events","push","register","element","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","type","fn","listen","target","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","parentNode","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","querySelector","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","map","toArray","slice","filter","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","remove","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","el","elementChanged","oldValue","concatLists","accum","list","concat","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","attrib2css","selectors","styles","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","Math","abs","dy","prepareEvent","pd","prepareButtonsForMove","which","mousedown","button","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","exec","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","setTimeout","clearTimeout","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","id","detail","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","webkitForce","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","indexOf","splice","h","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","Error","assertConnected","elem","parent","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","String","createElement","textContent","appendChild","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding","factory","setMaxHeightForTruncate","item","maxHeight","parseFloat","getComputedStyle","lineHeight","scrollHeight","classList","style","setZoom","zoom","maxScrollDistance","backgroundSize","innerText","round","scrollBar","display","backgroundPositionX","setScroll","scroll","left","INITIAL_ZOOM","MAX_ZOOM","MIN_ZOOM","ZOOM_SPEED","INITIAL_BRIGHTNESS","MIN_BRIGHTNESS","MAX_BRIGHTNESS","INITIAL_SCROLL","handleGestures","touchableArea","currentGestures","prevPos","prevDiff","prevAngle","nodeState","brightness","pointerUpHandler","remove_event","pointerMoveHandler","p1","p2","curDiff","pow1","pow2","sqrt","getDistance","curAngle","atan2","PI","getAngle","clientWidth","setBrightness","handleTwoTouches","handleOneTouch","onclick","onload","async","console","data","fetch","then","response","json","catch","err","eventsNode","eventsTemplate","eventNode","content","eventClone","importNode","eventIcon","setAttribute","icon","title","time","description","eventDetails","descriptionNode","descriptionClone","graphNode","graphClone","temperature","tempNode","tempClone","humidity","track","trackNode","trackClone","albumcover","artist","volume","btnGroupNode","btnGroupClone","image","imageNode","imageClone","generateContent","body","onresize","toggle"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/*!\r\n * PEP v0.4.3 | https://github.com/jquery/PEP\r\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\r\n */\r\n\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global.PointerEventsPolyfill = factory());\r\n}(this, function () { 'use strict';\r\n\r\n  /**\r\n   * This is the constructor for new PointerEvents.\r\n   *\r\n   * New Pointer Events must be given a type, and an optional dictionary of\r\n   * initialization properties.\r\n   *\r\n   * Due to certain platform requirements, events returned from the constructor\r\n   * identify as MouseEvents.\r\n   *\r\n   * @constructor\r\n   * @param {String} inType The type of the event to create.\r\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\r\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\r\n   */\r\n  var MOUSE_PROPS = [\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n    'pageX',\r\n    'pageY'\r\n  ];\r\n\r\n  var MOUSE_DEFAULTS = [\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  function PointerEvent(inType, inDict) {\r\n    inDict = inDict || Object.create(null);\r\n\r\n    var e = document.createEvent('Event');\r\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\r\n\r\n    // define inherited MouseEvent properties\r\n    // skip bubbles and cancelable since they're set above in initEvent()\r\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\r\n      p = MOUSE_PROPS[i];\r\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\r\n    }\r\n    e.buttons = inDict.buttons || 0;\r\n\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n\r\n    if (inDict.pressure && e.buttons) {\r\n      pressure = inDict.pressure;\r\n    } else {\r\n      pressure = e.buttons ? 0.5 : 0;\r\n    }\r\n\r\n    // add x/y properties aliased to clientX/Y\r\n    e.x = e.clientX;\r\n    e.y = e.clientY;\r\n\r\n    // define the properties of the PointerEvent interface\r\n    e.pointerId = inDict.pointerId || 0;\r\n    e.width = inDict.width || 0;\r\n    e.height = inDict.height || 0;\r\n    e.pressure = pressure;\r\n    e.tiltX = inDict.tiltX || 0;\r\n    e.tiltY = inDict.tiltY || 0;\r\n    e.twist = inDict.twist || 0;\r\n    e.tangentialPressure = inDict.tangentialPressure || 0;\r\n    e.pointerType = inDict.pointerType || '';\r\n    e.hwTimestamp = inDict.hwTimestamp || 0;\r\n    e.isPrimary = inDict.isPrimary || false;\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * This module implements a map of pointer states\r\n   */\r\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\r\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\r\n\r\n  function SparseArrayMap() {\r\n    this.array = [];\r\n    this.size = 0;\r\n  }\r\n\r\n  SparseArrayMap.prototype = {\r\n    set: function(k, v) {\r\n      if (v === undefined) {\r\n        return this.delete(k);\r\n      }\r\n      if (!this.has(k)) {\r\n        this.size++;\r\n      }\r\n      this.array[k] = v;\r\n    },\r\n    has: function(k) {\r\n      return this.array[k] !== undefined;\r\n    },\r\n    delete: function(k) {\r\n      if (this.has(k)) {\r\n        delete this.array[k];\r\n        this.size--;\r\n      }\r\n    },\r\n    get: function(k) {\r\n      return this.array[k];\r\n    },\r\n    clear: function() {\r\n      this.array.length = 0;\r\n      this.size = 0;\r\n    },\r\n\r\n    // return value, key, map\r\n    forEach: function(callback, thisArg) {\r\n      return this.array.forEach(function(v, k) {\r\n        callback.call(thisArg, v, k, this);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  var CLONE_PROPS = [\r\n\r\n    // MouseEvent\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n\r\n    // DOM Level 3\r\n    'buttons',\r\n\r\n    // PointerEvent\r\n    'pointerId',\r\n    'width',\r\n    'height',\r\n    'pressure',\r\n    'tiltX',\r\n    'tiltY',\r\n    'pointerType',\r\n    'hwTimestamp',\r\n    'isPrimary',\r\n\r\n    // event instance\r\n    'type',\r\n    'target',\r\n    'currentTarget',\r\n    'which',\r\n    'pageX',\r\n    'pageY',\r\n    'timeStamp'\r\n  ];\r\n\r\n  var CLONE_DEFAULTS = [\r\n\r\n    // MouseEvent\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n\r\n    // DOM Level 3\r\n    0,\r\n\r\n    // PointerEvent\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    '',\r\n    0,\r\n    false,\r\n\r\n    // event instance\r\n    '',\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  var BOUNDARY_EVENTS = {\r\n    'pointerover': 1,\r\n    'pointerout': 1,\r\n    'pointerenter': 1,\r\n    'pointerleave': 1\r\n  };\r\n\r\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\r\n\r\n  /**\r\n   * This module is for normalizing events. Mouse and Touch events will be\r\n   * collected here, and fire PointerEvents that have the same semantics, no\r\n   * matter the source.\r\n   * Events fired:\r\n   *   - pointerdown: a pointing is added\r\n   *   - pointerup: a pointer is removed\r\n   *   - pointermove: a pointer is moved\r\n   *   - pointerover: a pointer crosses into an element\r\n   *   - pointerout: a pointer leaves an element\r\n   *   - pointercancel: a pointer will no longer generate events\r\n   */\r\n  var dispatcher = {\r\n    pointermap: new PointerMap(),\r\n    eventMap: Object.create(null),\r\n    captureInfo: Object.create(null),\r\n\r\n    // Scope objects for native events.\r\n    // This exists for ease of testing.\r\n    eventSources: Object.create(null),\r\n    eventSourceList: [],\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * `inSource` must contain an array of event names named `events`, and\r\n     * functions with the names specified in the `events` array.\r\n     * @param {string} name A name for the event source\r\n     * @param {Object} source A new source of platform events.\r\n     */\r\n    registerSource: function(name, source) {\r\n      var s = source;\r\n      var newEvents = s.events;\r\n      if (newEvents) {\r\n        newEvents.forEach(function(e) {\r\n          if (s[e]) {\r\n            this.eventMap[e] = s[e].bind(s);\r\n          }\r\n        }, this);\r\n        this.eventSources[name] = s;\r\n        this.eventSourceList.push(s);\r\n      }\r\n    },\r\n    register: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.register.call(es, element);\r\n      }\r\n    },\r\n    unregister: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.unregister.call(es, element);\r\n      }\r\n    },\r\n    contains: /*scope.external.contains || */function(container, contained) {\r\n      try {\r\n        return container.contains(contained);\r\n      } catch (ex) {\r\n\r\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // EVENTS\r\n    down: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerdown', inEvent);\r\n    },\r\n    move: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointermove', inEvent);\r\n    },\r\n    up: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerup', inEvent);\r\n    },\r\n    enter: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerenter', inEvent);\r\n    },\r\n    leave: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerleave', inEvent);\r\n    },\r\n    over: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerover', inEvent);\r\n    },\r\n    out: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerout', inEvent);\r\n    },\r\n    cancel: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointercancel', inEvent);\r\n    },\r\n    leaveOut: function(event) {\r\n      this.out(event);\r\n      this.propagate(event, this.leave, false);\r\n    },\r\n    enterOver: function(event) {\r\n      this.over(event);\r\n      this.propagate(event, this.enter, true);\r\n    },\r\n\r\n    // LISTENER LOGIC\r\n    eventHandler: function(inEvent) {\r\n\r\n      // This is used to prevent multiple dispatch of pointerevents from\r\n      // platform events. This can happen when two elements in different scopes\r\n      // are set up to create pointer events, which is relevant to Shadow DOM.\r\n      if (inEvent._handledByPE) {\r\n        return;\r\n      }\r\n      var type = inEvent.type;\r\n      var fn = this.eventMap && this.eventMap[type];\r\n      if (fn) {\r\n        fn(inEvent);\r\n      }\r\n      inEvent._handledByPE = true;\r\n    },\r\n\r\n    // set up event listeners\r\n    listen: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.addEvent(target, e);\r\n      }, this);\r\n    },\r\n\r\n    // remove event listeners\r\n    unlisten: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.removeEvent(target, e);\r\n      }, this);\r\n    },\r\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\r\n      target.addEventListener(eventName, this.boundHandler);\r\n    },\r\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\r\n      target.removeEventListener(eventName, this.boundHandler);\r\n    },\r\n\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `inEvent`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create\r\n     * @param {Event} inEvent A platform event with a target\r\n     * @return {Event} A PointerEvent of type `inType`\r\n     */\r\n    makeEvent: function(inType, inEvent) {\r\n\r\n      // relatedTarget must be null if pointer is captured\r\n      if (this.captureInfo[inEvent.pointerId]) {\r\n        inEvent.relatedTarget = null;\r\n      }\r\n      var e = new PointerEvent(inType, inEvent);\r\n      if (inEvent.preventDefault) {\r\n        e.preventDefault = inEvent.preventDefault;\r\n      }\r\n      e._target = e._target || inEvent.target;\r\n      return e;\r\n    },\r\n\r\n    // make and dispatch an event in one call\r\n    fireEvent: function(inType, inEvent) {\r\n      var e = this.makeEvent(inType, inEvent);\r\n      return this.dispatchEvent(e);\r\n    },\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} inEvent An event that contains properties to copy.\r\n     * @return {Object} An object containing shallow copies of `inEvent`'s\r\n     *    properties.\r\n     */\r\n    cloneEvent: function(inEvent) {\r\n      var eventCopy = Object.create(null);\r\n      var p;\r\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\r\n        p = CLONE_PROPS[i];\r\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\r\n\r\n        // Work around SVGInstanceElement shadow tree\r\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\r\n        // This is the behavior implemented by Firefox.\r\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\r\n          if (eventCopy[p] instanceof SVGElementInstance) {\r\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep the semantics of preventDefault\r\n      if (inEvent.preventDefault) {\r\n        eventCopy.preventDefault = function() {\r\n          inEvent.preventDefault();\r\n        };\r\n      }\r\n      return eventCopy;\r\n    },\r\n    getTarget: function(inEvent) {\r\n      var capture = this.captureInfo[inEvent.pointerId];\r\n      if (!capture) {\r\n        return inEvent._target;\r\n      }\r\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\r\n        return capture;\r\n      }\r\n    },\r\n    propagate: function(event, fn, propagateDown) {\r\n      var target = event.target;\r\n      var targets = [];\r\n\r\n      // Order of conditions due to document.contains() missing in IE.\r\n      while (target !== document && !target.contains(event.relatedTarget)) {\r\n        targets.push(target);\r\n        target = target.parentNode;\r\n\r\n        // Touch: Do not propagate if node is detached.\r\n        if (!target) {\r\n          return;\r\n        }\r\n      }\r\n      if (propagateDown) {\r\n        targets.reverse();\r\n      }\r\n      targets.forEach(function(target) {\r\n        event.target = target;\r\n        fn.call(this, event);\r\n      }, this);\r\n    },\r\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\r\n      if (this.captureInfo[inPointerId]) {\r\n        this.releaseCapture(inPointerId, skipDispatch);\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = inTarget;\r\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\r\n      document.addEventListener('pointerup', this.implicitRelease);\r\n      document.addEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('gotpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = inTarget;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    releaseCapture: function(inPointerId, skipDispatch) {\r\n      var t = this.captureInfo[inPointerId];\r\n      if (!t) {\r\n        return;\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = undefined;\r\n      document.removeEventListener('pointerup', this.implicitRelease);\r\n      document.removeEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('lostpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = t;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    /**\r\n     * Dispatches the event to its target.\r\n     *\r\n     * @param {Event} inEvent The event to be dispatched.\r\n     * @return {Boolean} True if an event handler returns true, false otherwise.\r\n     */\r\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\r\n      var t = this.getTarget(inEvent);\r\n      if (t) {\r\n        return t.dispatchEvent(inEvent);\r\n      }\r\n    },\r\n    asyncDispatchEvent: function(inEvent) {\r\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\r\n    }\r\n  };\r\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\r\n\r\n  var targeting = {\r\n    shadow: function(inEl) {\r\n      if (inEl) {\r\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\r\n      }\r\n    },\r\n    canTarget: function(shadow) {\r\n      return shadow && Boolean(shadow.elementFromPoint);\r\n    },\r\n    targetingShadow: function(inEl) {\r\n      var s = this.shadow(inEl);\r\n      if (this.canTarget(s)) {\r\n        return s;\r\n      }\r\n    },\r\n    olderShadow: function(shadow) {\r\n      var os = shadow.olderShadowRoot;\r\n      if (!os) {\r\n        var se = shadow.querySelector('shadow');\r\n        if (se) {\r\n          os = se.olderShadowRoot;\r\n        }\r\n      }\r\n      return os;\r\n    },\r\n    allShadows: function(element) {\r\n      var shadows = [];\r\n      var s = this.shadow(element);\r\n      while (s) {\r\n        shadows.push(s);\r\n        s = this.olderShadow(s);\r\n      }\r\n      return shadows;\r\n    },\r\n    searchRoot: function(inRoot, x, y) {\r\n      if (inRoot) {\r\n        var t = inRoot.elementFromPoint(x, y);\r\n        var st, sr;\r\n\r\n        // is element a shadow host?\r\n        sr = this.targetingShadow(t);\r\n        while (sr) {\r\n\r\n          // find the the element inside the shadow root\r\n          st = sr.elementFromPoint(x, y);\r\n          if (!st) {\r\n\r\n            // check for older shadows\r\n            sr = this.olderShadow(sr);\r\n          } else {\r\n\r\n            // shadowed element may contain a shadow root\r\n            var ssr = this.targetingShadow(st);\r\n            return this.searchRoot(ssr, x, y) || st;\r\n          }\r\n        }\r\n\r\n        // light dom element is the target\r\n        return t;\r\n      }\r\n    },\r\n    owner: function(element) {\r\n      var s = element;\r\n\r\n      // walk up until you hit the shadow root or document\r\n      while (s.parentNode) {\r\n        s = s.parentNode;\r\n      }\r\n\r\n      // the owner element is expected to be a Document or ShadowRoot\r\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\r\n        s = document;\r\n      }\r\n      return s;\r\n    },\r\n    findTarget: function(inEvent) {\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n\r\n      // if the listener is in the shadow root, it is much faster to start there\r\n      var s = this.owner(inEvent.target);\r\n\r\n      // if x, y is not in this root, fall back to document search\r\n      if (!s.elementFromPoint(x, y)) {\r\n        s = document;\r\n      }\r\n      return this.searchRoot(s, x, y);\r\n    }\r\n  };\r\n\r\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\r\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\r\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\r\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\r\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\r\n  var SELECTOR = '[touch-action]';\r\n  var OBSERVER_INIT = {\r\n    subtree: true,\r\n    childList: true,\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: ['touch-action']\r\n  };\r\n\r\n  function Installer(add, remove, changed, binder) {\r\n    this.addCallback = add.bind(binder);\r\n    this.removeCallback = remove.bind(binder);\r\n    this.changedCallback = changed.bind(binder);\r\n    if (MO) {\r\n      this.observer = new MO(this.mutationWatcher.bind(this));\r\n    }\r\n  }\r\n\r\n  Installer.prototype = {\r\n    watchSubtree: function(target) {\r\n\r\n      // Only watch scopes that can target find, as these are top-level.\r\n      // Otherwise we can see duplicate additions and removals that add noise.\r\n      //\r\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\r\n      // a removal without an insertion when a node is redistributed among\r\n      // shadows. Since it all ends up correct in the document, watching only\r\n      // the document will yield the correct mutations to watch.\r\n      if (this.observer && targeting.canTarget(target)) {\r\n        this.observer.observe(target, OBSERVER_INIT);\r\n      }\r\n    },\r\n    enableOnSubtree: function(target) {\r\n      this.watchSubtree(target);\r\n      if (target === document && document.readyState !== 'complete') {\r\n        this.installOnLoad();\r\n      } else {\r\n        this.installNewSubtree(target);\r\n      }\r\n    },\r\n    installNewSubtree: function(target) {\r\n      forEach(this.findElements(target), this.addElement, this);\r\n    },\r\n    findElements: function(target) {\r\n      if (target.querySelectorAll) {\r\n        return target.querySelectorAll(SELECTOR);\r\n      }\r\n      return [];\r\n    },\r\n    removeElement: function(el) {\r\n      this.removeCallback(el);\r\n    },\r\n    addElement: function(el) {\r\n      this.addCallback(el);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      this.changedCallback(el, oldValue);\r\n    },\r\n    concatLists: function(accum, list) {\r\n      return accum.concat(toArray(list));\r\n    },\r\n\r\n    // register all touch-action = none nodes on document load\r\n    installOnLoad: function() {\r\n      document.addEventListener('readystatechange', function() {\r\n        if (document.readyState === 'complete') {\r\n          this.installNewSubtree(document);\r\n        }\r\n      }.bind(this));\r\n    },\r\n    isElement: function(n) {\r\n      return n.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    flattenMutationTree: function(inNodes) {\r\n\r\n      // find children with touch-action\r\n      var tree = map(inNodes, this.findElements, this);\r\n\r\n      // make sure the added nodes are accounted for\r\n      tree.push(filter(inNodes, this.isElement));\r\n\r\n      // flatten the list\r\n      return tree.reduce(this.concatLists, []);\r\n    },\r\n    mutationWatcher: function(mutations) {\r\n      mutations.forEach(this.mutationHandler, this);\r\n    },\r\n    mutationHandler: function(m) {\r\n      if (m.type === 'childList') {\r\n        var added = this.flattenMutationTree(m.addedNodes);\r\n        added.forEach(this.addElement, this);\r\n        var removed = this.flattenMutationTree(m.removedNodes);\r\n        removed.forEach(this.removeElement, this);\r\n      } else if (m.type === 'attributes') {\r\n        this.elementChanged(m.target, m.oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  function shadowSelector(v) {\r\n    return 'body /shadow-deep/ ' + selector(v);\r\n  }\r\n  function selector(v) {\r\n    return '[touch-action=\"' + v + '\"]';\r\n  }\r\n  function rule(v) {\r\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\r\n  }\r\n  var attrib2css = [\r\n    'none',\r\n    'auto',\r\n    'pan-x',\r\n    'pan-y',\r\n    {\r\n      rule: 'pan-x pan-y',\r\n      selectors: [\r\n        'pan-x pan-y',\r\n        'pan-y pan-x'\r\n      ]\r\n    }\r\n  ];\r\n  var styles = '';\r\n\r\n  // only install stylesheet if the browser has touch action support\r\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\r\n\r\n  // only add shadow selectors if shadowdom is supported\r\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\r\n\r\n  function applyAttributeStyles() {\r\n    if (hasNativePE) {\r\n      attrib2css.forEach(function(r) {\r\n        if (String(r) === r) {\r\n          styles += selector(r) + rule(r) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += shadowSelector(r) + rule(r) + '\\n';\r\n          }\r\n        } else {\r\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\r\n          }\r\n        }\r\n      });\r\n\r\n      var el = document.createElement('style');\r\n      el.textContent = styles;\r\n      document.head.appendChild(el);\r\n    }\r\n  }\r\n\r\n  var pointermap = dispatcher.pointermap;\r\n\r\n  // radius around touchend that swallows mouse events\r\n  var DEDUP_DIST = 25;\r\n\r\n  // left, middle, right, back, forward\r\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\r\n\r\n  var HAS_BUTTONS = false;\r\n  try {\r\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\r\n  } catch (e) {}\r\n\r\n  // handler block for native mouse events\r\n  var mouseEvents = {\r\n    POINTER_ID: 1,\r\n    POINTER_TYPE: 'mouse',\r\n    events: [\r\n      'mousedown',\r\n      'mousemove',\r\n      'mouseup',\r\n      'mouseover',\r\n      'mouseout'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    lastTouches: [],\r\n\r\n    // collide with the global mouse listener\r\n    isEventSimulatedFromTouch: function(inEvent) {\r\n      var lts = this.lastTouches;\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n\r\n        // simulated mouse events will be swallowed near a primary touchend\r\n        var dx = Math.abs(x - t.x);\r\n        var dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    prepareEvent: function(inEvent) {\r\n      var e = dispatcher.cloneEvent(inEvent);\r\n\r\n      // forward mouse preventDefault\r\n      var pd = e.preventDefault;\r\n      e.preventDefault = function() {\r\n        inEvent.preventDefault();\r\n        pd();\r\n      };\r\n      e.pointerId = this.POINTER_ID;\r\n      e.isPrimary = true;\r\n      e.pointerType = this.POINTER_TYPE;\r\n      return e;\r\n    },\r\n    prepareButtonsForMove: function(e, inEvent) {\r\n      var p = pointermap.get(this.POINTER_ID);\r\n\r\n      // Update buttons state after possible out-of-document mouseup.\r\n      if (inEvent.which === 0 || !p) {\r\n        e.buttons = 0;\r\n      } else {\r\n        e.buttons = p.buttons;\r\n      }\r\n      inEvent.buttons = e.buttons;\r\n    },\r\n    mousedown: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\r\n          if (p) { e.buttons |= p.buttons; }\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        if (!p || p.buttons === 0) {\r\n          dispatcher.down(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mousemove: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.move(e);\r\n      }\r\n    },\r\n    mouseup: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          var up = BUTTON_TO_BUTTONS[e.button];\r\n\r\n          // Produces wrong state of buttons in Browsers without `buttons` support\r\n          // when a mouse button that was pressed outside the document is released\r\n          // inside and other buttons are still pressed down.\r\n          e.buttons = p ? p.buttons & ~up : 0;\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n\r\n        // Support: Firefox <=44 only\r\n        // FF Ubuntu includes the lifted button in the `buttons` property on\r\n        // mouseup.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\r\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\r\n        if (e.buttons === 0) {\r\n          dispatcher.up(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mouseover: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.enterOver(e);\r\n      }\r\n    },\r\n    mouseout: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        dispatcher.leaveOut(e);\r\n      }\r\n    },\r\n    cancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.deactivateMouse();\r\n    },\r\n    deactivateMouse: function() {\r\n      pointermap.delete(this.POINTER_ID);\r\n    }\r\n  };\r\n\r\n  var captureInfo = dispatcher.captureInfo;\r\n  var findTarget = targeting.findTarget.bind(targeting);\r\n  var allShadows = targeting.allShadows.bind(targeting);\r\n  var pointermap$1 = dispatcher.pointermap;\r\n\r\n  // This should be long enough to ignore compat mouse events made by touch\r\n  var DEDUP_TIMEOUT = 2500;\r\n  var CLICK_COUNT_TIMEOUT = 200;\r\n  var ATTRIB = 'touch-action';\r\n  var INSTALLER;\r\n\r\n  // handler block for native touch events\r\n  var touchEvents = {\r\n    events: [\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n      'touchcancel'\r\n    ],\r\n    register: function(target) {\r\n      INSTALLER.enableOnSubtree(target);\r\n    },\r\n    unregister: function() {\r\n\r\n      // TODO(dfreedman): is it worth it to disconnect the MO?\r\n    },\r\n    elementAdded: function(el) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      if (st) {\r\n        el._scrollType = st;\r\n        dispatcher.listen(el, this.events);\r\n\r\n        // set touch-action on shadows as well\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n          dispatcher.listen(s, this.events);\r\n        }, this);\r\n      }\r\n    },\r\n    elementRemoved: function(el) {\r\n      el._scrollType = undefined;\r\n      dispatcher.unlisten(el, this.events);\r\n\r\n      // remove touch-action from shadow\r\n      allShadows(el).forEach(function(s) {\r\n        s._scrollType = undefined;\r\n        dispatcher.unlisten(s, this.events);\r\n      }, this);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      var oldSt = this.touchActionToScrollType(oldValue);\r\n\r\n      // simply update scrollType if listeners are already established\r\n      if (st && oldSt) {\r\n        el._scrollType = st;\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n        }, this);\r\n      } else if (oldSt) {\r\n        this.elementRemoved(el);\r\n      } else if (st) {\r\n        this.elementAdded(el);\r\n      }\r\n    },\r\n    scrollTypes: {\r\n      EMITTER: 'none',\r\n      XSCROLLER: 'pan-x',\r\n      YSCROLLER: 'pan-y',\r\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\r\n    },\r\n    touchActionToScrollType: function(touchAction) {\r\n      var t = touchAction;\r\n      var st = this.scrollTypes;\r\n      if (t === 'none') {\r\n        return 'none';\r\n      } else if (t === st.XSCROLLER) {\r\n        return 'X';\r\n      } else if (t === st.YSCROLLER) {\r\n        return 'Y';\r\n      } else if (st.SCROLLER.exec(t)) {\r\n        return 'XY';\r\n      }\r\n    },\r\n    POINTER_TYPE: 'touch',\r\n    firstTouch: null,\r\n    isPrimaryTouch: function(inTouch) {\r\n      return this.firstTouch === inTouch.identifier;\r\n    },\r\n    setPrimaryTouch: function(inTouch) {\r\n\r\n      // set primary touch if there no pointers, or the only pointer is the mouse\r\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\r\n        this.firstTouch = inTouch.identifier;\r\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\r\n        this.scrolling = false;\r\n        this.cancelResetClickCount();\r\n      }\r\n    },\r\n    removePrimaryPointer: function(inPointer) {\r\n      if (inPointer.isPrimary) {\r\n        this.firstTouch = null;\r\n        this.firstXY = null;\r\n        this.resetClickCount();\r\n      }\r\n    },\r\n    clickCount: 0,\r\n    resetId: null,\r\n    resetClickCount: function() {\r\n      var fn = function() {\r\n        this.clickCount = 0;\r\n        this.resetId = null;\r\n      }.bind(this);\r\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\r\n    },\r\n    cancelResetClickCount: function() {\r\n      if (this.resetId) {\r\n        clearTimeout(this.resetId);\r\n      }\r\n    },\r\n    typeToButtons: function(type) {\r\n      var ret = 0;\r\n      if (type === 'touchstart' || type === 'touchmove') {\r\n        ret = 1;\r\n      }\r\n      return ret;\r\n    },\r\n    touchToPointer: function(inTouch) {\r\n      var cte = this.currentTouchEvent;\r\n      var e = dispatcher.cloneEvent(inTouch);\r\n\r\n      // We reserve pointerId 1 for Mouse.\r\n      // Touch identifiers can start at 0.\r\n      // Add 2 to the touch identifier for compatibility.\r\n      var id = e.pointerId = inTouch.identifier + 2;\r\n      e.target = captureInfo[id] || findTarget(e);\r\n      e.bubbles = true;\r\n      e.cancelable = true;\r\n      e.detail = this.clickCount;\r\n      e.button = 0;\r\n      e.buttons = this.typeToButtons(cte.type);\r\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\r\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\r\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\r\n      e.isPrimary = this.isPrimaryTouch(inTouch);\r\n      e.pointerType = this.POINTER_TYPE;\r\n\r\n      // forward modifier keys\r\n      e.altKey = cte.altKey;\r\n      e.ctrlKey = cte.ctrlKey;\r\n      e.metaKey = cte.metaKey;\r\n      e.shiftKey = cte.shiftKey;\r\n\r\n      // forward touch preventDefaults\r\n      var self = this;\r\n      e.preventDefault = function() {\r\n        self.scrolling = false;\r\n        self.firstXY = null;\r\n        cte.preventDefault();\r\n      };\r\n      return e;\r\n    },\r\n    processTouches: function(inEvent, inFunction) {\r\n      var tl = inEvent.changedTouches;\r\n      this.currentTouchEvent = inEvent;\r\n      for (var i = 0, t; i < tl.length; i++) {\r\n        t = tl[i];\r\n        inFunction.call(this, this.touchToPointer(t));\r\n      }\r\n    },\r\n\r\n    // For single axis scrollers, determines whether the element should emit\r\n    // pointer events or behave as a scroller\r\n    shouldScroll: function(inEvent) {\r\n      if (this.firstXY) {\r\n        var ret;\r\n        var scrollAxis = inEvent.currentTarget._scrollType;\r\n        if (scrollAxis === 'none') {\r\n\r\n          // this element is a touch-action: none, should never scroll\r\n          ret = false;\r\n        } else if (scrollAxis === 'XY') {\r\n\r\n          // this element should always scroll\r\n          ret = true;\r\n        } else {\r\n          var t = inEvent.changedTouches[0];\r\n\r\n          // check the intended scroll axis, and other axis\r\n          var a = scrollAxis;\r\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\r\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\r\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\r\n\r\n          // if delta in the scroll axis > delta other axis, scroll instead of\r\n          // making events\r\n          ret = da >= doa;\r\n        }\r\n        this.firstXY = null;\r\n        return ret;\r\n      }\r\n    },\r\n    findTouch: function(inTL, inId) {\r\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\r\n        if (t.identifier === inId) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // In some instances, a touchstart can happen without a touchend. This\r\n    // leaves the pointermap in a broken state.\r\n    // Therefore, on every touchstart, we remove the touches that did not fire a\r\n    // touchend event.\r\n    // To keep state globally consistent, we fire a\r\n    // pointercancel for this \"abandoned\" touch\r\n    vacuumTouches: function(inEvent) {\r\n      var tl = inEvent.touches;\r\n\r\n      // pointermap.size should be < tl.length here, as the touchstart has not\r\n      // been processed yet.\r\n      if (pointermap$1.size >= tl.length) {\r\n        var d = [];\r\n        pointermap$1.forEach(function(value, key) {\r\n\r\n          // Never remove pointerId == 1, which is mouse.\r\n          // Touch identifiers are 2 smaller than their pointerId, which is the\r\n          // index in pointermap.\r\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\r\n            var p = value.out;\r\n            d.push(p);\r\n          }\r\n        }, this);\r\n        d.forEach(this.cancelOut, this);\r\n      }\r\n    },\r\n    touchstart: function(inEvent) {\r\n      this.vacuumTouches(inEvent);\r\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\r\n      this.dedupSynthMouse(inEvent);\r\n      if (!this.scrolling) {\r\n        this.clickCount++;\r\n        this.processTouches(inEvent, this.overDown);\r\n      }\r\n    },\r\n    overDown: function(inPointer) {\r\n      pointermap$1.set(inPointer.pointerId, {\r\n        target: inPointer.target,\r\n        out: inPointer,\r\n        outTarget: inPointer.target\r\n      });\r\n      dispatcher.enterOver(inPointer);\r\n      dispatcher.down(inPointer);\r\n    },\r\n    touchmove: function(inEvent) {\r\n      if (!this.scrolling) {\r\n        if (this.shouldScroll(inEvent)) {\r\n          this.scrolling = true;\r\n          this.touchcancel(inEvent);\r\n        } else {\r\n          inEvent.preventDefault();\r\n          this.processTouches(inEvent, this.moveOverOut);\r\n        }\r\n      }\r\n    },\r\n    moveOverOut: function(inPointer) {\r\n      var event = inPointer;\r\n      var pointer = pointermap$1.get(event.pointerId);\r\n\r\n      // a finger drifted off the screen, ignore it\r\n      if (!pointer) {\r\n        return;\r\n      }\r\n      var outEvent = pointer.out;\r\n      var outTarget = pointer.outTarget;\r\n      dispatcher.move(event);\r\n      if (outEvent && outTarget !== event.target) {\r\n        outEvent.relatedTarget = event.target;\r\n        event.relatedTarget = outTarget;\r\n\r\n        // recover from retargeting by shadow\r\n        outEvent.target = outTarget;\r\n        if (event.target) {\r\n          dispatcher.leaveOut(outEvent);\r\n          dispatcher.enterOver(event);\r\n        } else {\r\n\r\n          // clean up case when finger leaves the screen\r\n          event.target = outTarget;\r\n          event.relatedTarget = null;\r\n          this.cancelOut(event);\r\n        }\r\n      }\r\n      pointer.out = event;\r\n      pointer.outTarget = event.target;\r\n    },\r\n    touchend: function(inEvent) {\r\n      this.dedupSynthMouse(inEvent);\r\n      this.processTouches(inEvent, this.upOut);\r\n    },\r\n    upOut: function(inPointer) {\r\n      if (!this.scrolling) {\r\n        dispatcher.up(inPointer);\r\n        dispatcher.leaveOut(inPointer);\r\n      }\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    touchcancel: function(inEvent) {\r\n      this.processTouches(inEvent, this.cancelOut);\r\n    },\r\n    cancelOut: function(inPointer) {\r\n      dispatcher.cancel(inPointer);\r\n      dispatcher.leaveOut(inPointer);\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    cleanUpPointer: function(inPointer) {\r\n      pointermap$1.delete(inPointer.pointerId);\r\n      this.removePrimaryPointer(inPointer);\r\n    },\r\n\r\n    // prevent synth mouse events from creating pointer events\r\n    dedupSynthMouse: function(inEvent) {\r\n      var lts = mouseEvents.lastTouches;\r\n      var t = inEvent.changedTouches[0];\r\n\r\n      // only the primary finger will synth mouse events\r\n      if (this.isPrimaryTouch(t)) {\r\n\r\n        // remember x/y of last touch\r\n        var lt = { x: t.clientX, y: t.clientY };\r\n        lts.push(lt);\r\n        var fn = (function(lts, lt) {\r\n          var i = lts.indexOf(lt);\r\n          if (i > -1) {\r\n            lts.splice(i, 1);\r\n          }\r\n        }).bind(null, lts, lt);\r\n        setTimeout(fn, DEDUP_TIMEOUT);\r\n      }\r\n    }\r\n  };\r\n\r\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\r\n    touchEvents.elementChanged, touchEvents);\r\n\r\n  var pointermap$2 = dispatcher.pointermap;\r\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\r\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\r\n  var msEvents = {\r\n    events: [\r\n      'MSPointerDown',\r\n      'MSPointerMove',\r\n      'MSPointerUp',\r\n      'MSPointerOut',\r\n      'MSPointerOver',\r\n      'MSPointerCancel',\r\n      'MSGotPointerCapture',\r\n      'MSLostPointerCapture'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    POINTER_TYPES: [\r\n      '',\r\n      'unavailable',\r\n      'touch',\r\n      'pen',\r\n      'mouse'\r\n    ],\r\n    prepareEvent: function(inEvent) {\r\n      var e = inEvent;\r\n      if (HAS_BITMAP_TYPE) {\r\n        e = dispatcher.cloneEvent(inEvent);\r\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\r\n      }\r\n      return e;\r\n    },\r\n    cleanup: function(id) {\r\n      pointermap$2.delete(id);\r\n    },\r\n    MSPointerDown: function(inEvent) {\r\n      pointermap$2.set(inEvent.pointerId, inEvent);\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.down(e);\r\n    },\r\n    MSPointerMove: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.move(e);\r\n    },\r\n    MSPointerUp: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.up(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSPointerOut: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.leaveOut(e);\r\n    },\r\n    MSPointerOver: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.enterOver(e);\r\n    },\r\n    MSPointerCancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSLostPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    },\r\n    MSGotPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    }\r\n  };\r\n\r\n  function applyPolyfill() {\r\n\r\n    // only activate if this platform does not have pointer events\r\n    if (!window.PointerEvent) {\r\n      window.PointerEvent = PointerEvent;\r\n\r\n      if (window.navigator.msPointerEnabled) {\r\n        var tp = window.navigator.msMaxTouchPoints;\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: tp,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('ms', msEvents);\r\n      } else {\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: 0,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('mouse', mouseEvents);\r\n        if (window.ontouchstart !== undefined) {\r\n          dispatcher.registerSource('touch', touchEvents);\r\n        }\r\n      }\r\n\r\n      dispatcher.register(document);\r\n    }\r\n  }\r\n\r\n  var n = window.navigator;\r\n  var s;\r\n  var r;\r\n  var h;\r\n  function assertActive(id) {\r\n    if (!dispatcher.pointermap.has(id)) {\r\n      var error = new Error('InvalidPointerId');\r\n      error.name = 'InvalidPointerId';\r\n      throw error;\r\n    }\r\n  }\r\n  function assertConnected(elem) {\r\n    var parent = elem.parentNode;\r\n    while (parent && parent !== elem.ownerDocument) {\r\n      parent = parent.parentNode;\r\n    }\r\n    if (!parent) {\r\n      var error = new Error('InvalidStateError');\r\n      error.name = 'InvalidStateError';\r\n      throw error;\r\n    }\r\n  }\r\n  function inActiveButtonState(id) {\r\n    var p = dispatcher.pointermap.get(id);\r\n    return p.buttons !== 0;\r\n  }\r\n  if (n.msPointerEnabled) {\r\n    s = function(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this, true);\r\n        this.msSetPointerCapture(pointerId);\r\n      }\r\n    };\r\n    r = function(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId, true);\r\n      this.msReleasePointerCapture(pointerId);\r\n    };\r\n  } else {\r\n    s = function setPointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this);\r\n      }\r\n    };\r\n    r = function releasePointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId);\r\n    };\r\n  }\r\n  h = function hasPointerCapture(pointerId) {\r\n    return !!dispatcher.captureInfo[pointerId];\r\n  };\r\n\r\n  function applyPolyfill$1() {\r\n    if (window.Element && !Element.prototype.setPointerCapture) {\r\n      Object.defineProperties(Element.prototype, {\r\n        'setPointerCapture': {\r\n          value: s\r\n        },\r\n        'releasePointerCapture': {\r\n          value: r\r\n        },\r\n        'hasPointerCapture': {\r\n          value: h\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  applyAttributeStyles();\r\n  applyPolyfill();\r\n  applyPolyfill$1();\r\n\r\n  var pointerevents = {\r\n    dispatcher: dispatcher,\r\n    Installer: Installer,\r\n    PointerEvent: PointerEvent,\r\n    PointerMap: PointerMap,\r\n    targetFinding: targeting\r\n  };\r\n\r\n  return pointerevents;\r\n\r\n}));","export function setMaxHeightForTruncate() {\r\n  setTimeout(() => {\r\n    const truncatedStrings = document.querySelectorAll('.event__title');\r\n    truncatedStrings.forEach(item => {\r\n      const maxHeight = parseFloat(getComputedStyle(item).lineHeight) * 2;\r\n      if (item.scrollHeight - maxHeight > 5) item.classList.add('event__title_truncated');\r\n      item.style.maxHeight = `${maxHeight}px`;\r\n    });\r\n  }, 100);\r\n}\r\n\r\nexport function isTouchDevice() {\r\n  return 'ontouchstart' in window;\r\n}\r\n\r\nexport function isTemplateSupported() {\r\n  return 'content' in document.createElement('template');\r\n}\r\n\r\nexport function getDistance(p1, p2) {\r\n  let pow1 = Math.abs(p2.x - p1.x) ^ 2;\r\n  let pow2 = Math.abs(p2.y - p1.y) ^ 2;\r\n  return Math.sqrt(pow1 + pow2);\r\n}\r\n\r\nexport function getAngle(p1, p2) {\r\n  const rad = Math.atan2(p2.x - p1.x, p2.y - p1.y);\r\n  const grad = rad * 180 / Math.PI;\r\n  return grad;\r\n}\r\n\r\nexport function setZoom(el, zoom, maxScrollDistance) {\r\n  el.style.backgroundSize = `${zoom}%`;\r\n  document.querySelector('.event__pic-zoom').innerText = `Приближение: ${Math.round(zoom)}%`;\r\n\r\n  const scrollBar = document.querySelector('.event__pic-scrollbar');\r\n  if (zoom === 100) {\r\n    scrollBar.style.display = 'none';\r\n  } else if (scrollBar.style.display === 'none') {\r\n    scrollBar.style.display = 'block';\r\n  }\r\n  /* При уменьшении размера, если картинка смещена вправо — свдигаем,\r\n  чтобы картинка не выходила за пределы поля видимости. */\r\n  if (-parseFloat(el.style.backgroundPositionX) > maxScrollDistance) {\r\n    el.style.backgroundPositionX = `${-maxScrollDistance}px`;\r\n  }\r\n}\r\n\r\nexport function setBrightness(el, brightness) {\r\n  el.style.filter = `brightness(${brightness}%)`;\r\n  document.querySelector('.event__pic-brightness').innerText = `Яркость: ${Math.round(brightness)}%`;\r\n}\r\n\r\nexport function setScroll(el, scroll, maxScrollDistance) {\r\n  el.style.backgroundPositionX = `${scroll}px`;\r\n  document.querySelector('.event__pic-scrollbar').style.left = `${(-scroll * 100) / maxScrollDistance}%`;\r\n}\r\n","export const INITIAL_ZOOM = 200;\r\nexport const MAX_ZOOM = 1000;\r\nexport const MIN_ZOOM = 100;\r\nexport const ZOOM_SPEED = 30;\r\nexport const INITIAL_BRIGHTNESS = 100;\r\nexport const MIN_BRIGHTNESS = 0;\r\nexport const MAX_BRIGHTNESS = 500;\r\nexport const INITIAL_SCROLL = 0;\r\n","import {\r\n  MAX_ZOOM,\r\n  MIN_ZOOM,\r\n  ZOOM_SPEED,\r\n  MIN_BRIGHTNESS,\r\n  MAX_BRIGHTNESS,\r\n  INITIAL_ZOOM,\r\n  INITIAL_BRIGHTNESS,\r\n  INITIAL_SCROLL\r\n} from './constants';\r\nimport {\r\n  getDistance,\r\n  getAngle,\r\n  setZoom,\r\n  setBrightness,\r\n  setScroll\r\n} from './utils';\r\n\r\nexport default function handleGestures() {\r\n  const touchableArea = document.querySelector('.event__pic-img');\r\n\r\n  const currentGestures = {\r\n    events: [],\r\n    prevPos: null,\r\n    prevDiff: null,\r\n    prevAngle: null,\r\n  };\r\n  \r\n  /* Начальные значения сдвига, зума и яркости */\r\n  const nodeState = {\r\n    zoom: INITIAL_ZOOM,\r\n    scroll: INITIAL_SCROLL,\r\n    brightness: INITIAL_BRIGHTNESS\r\n  };\r\n\r\n  document.querySelector('.event__pic-reset-zoom-btn').onclick = (e) => {\r\n    nodeState.zoom = 100;\r\n    setZoom(touchableArea, nodeState.zoom);\r\n    nodeState.scroll = 0;\r\n    setScroll(touchableArea, nodeState.scroll);\r\n  };\r\n\r\n  touchableArea.addEventListener('pointerdown', e => {\r\n    touchableArea.setPointerCapture(e.pointerId);\r\n\r\n    currentGestures.events.push(e);\r\n    touchableArea.addEventListener('pointermove', pointerMoveHandler);\r\n  });\r\n\r\n  touchableArea.addEventListener('pointerup', pointerUpHandler);\r\n  touchableArea.addEventListener('pointercancel', pointerUpHandler);\r\n  touchableArea.addEventListener('pointerout', pointerUpHandler);\r\n  touchableArea.addEventListener('pointerleave', pointerUpHandler);\r\n\r\n  function pointerUpHandler(e) {\r\n    remove_event(e);\r\n    if (currentGestures.events.length < 2) currentGestures.prevDiff = null;\r\n    if (currentGestures.events.length < 1) currentGestures.prevPos = null;\r\n    if (currentGestures.events.length < 2) currentGestures.prevAngle = null;\r\n  }\r\n\r\n  function pointerMoveHandler(e) {\r\n    for (let i = 0; i < currentGestures.events.length; i++) {\r\n      if (e.pointerId == currentGestures.events[i].pointerId) {\r\n        currentGestures.events[i] = e;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!currentGestures.events.length) {\r\n      return;\r\n    } else if (currentGestures.events.length === 2) {\r\n      handleTwoTouches(e);\r\n    } else if (currentGestures.events.length === 1) {\r\n      handleOneTouch(e);\r\n    }\r\n  }\r\n\r\n  function handleOneTouch(e) {\r\n    if (currentGestures.prevPos) {\r\n      const maxScrollDistance = touchableArea.clientWidth * nodeState.zoom / 100 - e.target.clientWidth;\r\n\r\n      nodeState.scroll += e.x - currentGestures.prevPos;\r\n\r\n      if (nodeState.scroll > 0) {\r\n        nodeState.scroll = 0;\r\n      } else if (-nodeState.scroll > maxScrollDistance) {\r\n        nodeState.scroll = -maxScrollDistance;\r\n      }\r\n\r\n      setScroll(e.target, nodeState.scroll, maxScrollDistance);\r\n    }\r\n\r\n    currentGestures.prevPos = e.x;\r\n  }\r\n\r\n  function handleTwoTouches(e) {\r\n    const p1 = {x: currentGestures.events[0].clientX, y: currentGestures.events[0].clientY};\r\n    const p2 = {x: currentGestures.events[1].clientX, y: currentGestures.events[1].clientY};;\r\n    const curDiff = getDistance(p1, p2);\r\n    const curAngle = getAngle(p1, p2);\r\n\r\n    if (currentGestures.prevDiff) {\r\n      nodeState.zoom += (curDiff - currentGestures.prevDiff) * ZOOM_SPEED;\r\n\r\n      if (nodeState.zoom > MAX_ZOOM) {\r\n        nodeState.zoom = MAX_ZOOM;\r\n      } else if (nodeState.zoom < MIN_ZOOM) {\r\n        nodeState.zoom = MIN_ZOOM;\r\n      }\r\n\r\n      const maxScrollDistance = touchableArea.clientWidth * nodeState.zoom / 100 - e.target.clientWidth;\r\n      setZoom(e.target, nodeState.zoom, maxScrollDistance);\r\n    }\r\n\r\n    if (currentGestures.prevAngle && Math.abs(curAngle - currentGestures.prevAngle) < 300) {\r\n      nodeState.brightness -= curAngle - currentGestures.prevAngle;\r\n\r\n      if (nodeState.brightness > MAX_BRIGHTNESS) {\r\n        nodeState.brightness = MAX_BRIGHTNESS;\r\n      } else if (nodeState.brightness < MIN_BRIGHTNESS) {\r\n        nodeState.brightness = MIN_BRIGHTNESS;\r\n      }\r\n\r\n      setBrightness(e.target, nodeState.brightness);\r\n    }\r\n\r\n    currentGestures.prevDiff = curDiff;\r\n    currentGestures.prevAngle = curAngle;\r\n  }\r\n\r\n  function remove_event(e) {\r\n    for (let i = 0; i < currentGestures.events.length; i++) {\r\n      if (currentGestures.events[i].pointerId == e.pointerId) {\r\n        currentGestures.events.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import './polyfill/pep';\r\nimport generateContent from './generateContentFromTemplate';\r\nimport { setMaxHeightForTruncate, isTouchDevice, isTemplateSupported } from './utils';\r\nimport handleGestures from './handleGestures';\r\n\r\nwindow.onload = async function () {\r\n  /* Генерируются карточки из json данных на основании шаблона */\r\n  if (isTemplateSupported) {\r\n    await generateContent();\r\n    // Установим максимально-возможную высоту для заголовков карточек\r\n    setMaxHeightForTruncate();\r\n  } else {\r\n    console.error('тег <template> не поддерживается браузером. Обновитесь на Yandex Browser');\r\n  }\r\n\r\n  /* Если это тач устройства, то добавляем в body класс .touch */\r\n  if (isTouchDevice()) {\r\n    document.body.classList.add('touch');\r\n  }\r\n\r\n  /* При изменении размера окна пересчитываем максимально-возможную высоту заголовков карточек */\r\n  window.onresize = function() {\r\n    setMaxHeightForTruncate();\r\n  }\r\n\r\n  /* Показывать / скрывать меню на узких экранах по клику на \"бургерное меню\" */\r\n  document.querySelector('#toggle-menu').addEventListener('click', () => {\r\n    document.querySelector('#nav-menu').classList.toggle('menu_visible');\r\n  });\r\n\r\n  /* Обработчики жестов */\r\n  handleGestures();\r\n}\r\n","export default async function generateContent() {\r\n  const DATA_URL = 'data/events.json';\r\n\r\n  const data = await fetch(DATA_URL)\r\n    .then(response => response.json())\r\n    .then(json => json)\r\n    .catch(err => console.error(err));\r\n\r\n  if (!data) return null;\r\n\r\n  const eventsNode = document.querySelector('#events');\r\n  const eventsTemplate = document.querySelector('#events-template');\r\n  const eventNode = eventsTemplate.content.querySelector('.event');\r\n\r\n  data.events.forEach(event => {\r\n    const eventClone = document.importNode(eventNode, true);\r\n    eventClone.classList.add(`event_size_${event.size}`);\r\n    if (event.type === 'critical') eventClone.classList.add('event_critical');\r\n\r\n    const eventIcon = eventClone.querySelector('.event__icon');\r\n    eventIcon.setAttribute('src', `img/${event.icon}${event.type === 'critical' ? '-white' : ''}.svg`);\r\n    eventIcon.setAttribute('alt', event.source);\r\n\r\n    eventClone.querySelector('.event__title').textContent = event.title;\r\n    eventClone.querySelector('.event__source').textContent = event.source;\r\n    eventClone.querySelector('.event__time').textContent = event.time;\r\n\r\n    if (event.description || event.data) {\r\n      var eventDetails = document.createElement('div');\r\n      eventDetails.classList.add('event__details');\r\n      eventClone.appendChild(eventDetails);\r\n    }\r\n\r\n    if (event.description) {\r\n      const descriptionNode = eventsTemplate.content.querySelector('.event__description');\r\n      const descriptionClone = document.importNode(descriptionNode, true);\r\n      descriptionClone.textContent = event.description;\r\n      eventDetails.appendChild(descriptionClone);\r\n    }\r\n\r\n    if (event.data && event.data.type === 'graph') {\r\n      const graphNode = eventsTemplate.content.querySelector('.event__graph');\r\n      const graphClone = document.importNode(graphNode, true);\r\n      eventDetails.appendChild(graphClone);\r\n    }\r\n\r\n    if (event.data && event.data.temperature) {\r\n      const tempNode = eventsTemplate.content.querySelector('.event__temp-and-hum');\r\n      const tempClone = document.importNode(tempNode, true);\r\n      tempClone.querySelector('#temp').textContent = event.data.temperature;\r\n      tempClone.querySelector('#hum').textContent = event.data.humidity;\r\n      eventDetails.appendChild(tempClone);\r\n    }\r\n\r\n    if (event.data && event.data.track) {\r\n      const trackNode = eventsTemplate.content.querySelector('.event__track');\r\n      const trackClone = document.importNode(trackNode, true);\r\n      trackClone.querySelector('.event__track__cover').setAttribute('src', event.data.albumcover);\r\n      trackClone.querySelector('.event__track__name').textContent = `${event.data.artist} - ${event.data.track.name}`;\r\n      trackClone.querySelector('.event__track__time').textContent = event.data.track.length;\r\n      trackClone.querySelector('.event__track__vol').textContent = event.data.volume;\r\n      eventDetails.appendChild(trackClone);\r\n    }\r\n\r\n    if (event.data && event.data.buttons) {\r\n      const btnGroupNode = eventsTemplate.content.querySelector('.event__btn-group');\r\n      const btnGroupClone = document.importNode(btnGroupNode, true);\r\n      btnGroupClone.querySelector('.event__btn-confirm').textContent = event.data.buttons[0];\r\n      btnGroupClone.querySelector('.event__btn-cancel').textContent = event.data.buttons[1];\r\n      eventDetails.appendChild(btnGroupClone);\r\n    }\r\n\r\n    if (event.data && event.data.image) {\r\n      const imageNode = eventsTemplate.content.querySelector('.event__pic');\r\n      const imageClone = document.importNode(imageNode, true);\r\n      eventDetails.appendChild(imageClone);\r\n    }\r\n\r\n    eventsNode.appendChild(eventClone);\r\n  });\r\n}\r\n"],"sourceRoot":""}